name: Knossos

on: [push, pull_request]

jobs:
  windows-x64:
    name: Windows x64
    runs-on: windows-2019
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.3

      - uses: msys2/setup-msys2@v2

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          key: windows-cache-${{ hashFiles('yarn.lock', 'packages/build-tools/DEPS.yml', 'packages/*/go.mod') }}
          restore-keys: windows-cache-
          path: |
            ~/go/pkg/mod
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
            .yarn/install-state.gz
            third_party
            packages/build-tools/DEPS.stamps
            .tools
            !.tools/tool.exe

      - name: Configure build
        run: .\task.ps1 configure msys2_path=C:\msys64 build=Release

      - name: Fetch dependencies
        run: .\task.ps1 install-tools fetch-deps

      - name: Compile API definitions
        run: .\task.ps1 proto-build

      - name: Build libarchive
        run: .\task.ps1 libarchive-build

      - name: Build libknossos
        run: .\task.ps1 libknossos-build

      - name: Build Knossos wrapper
        run: .\task.ps1 client-build

      - name: Build Knossos UI
        run: .\task.ps1 client-ui-build

      - name: Archive build
        run: |
          cd build/client/launcher/Release
          7z a Knossos.7z .

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: windows-x64
          path: build/client/launcher/Release/Knossos.7z

  ubuntu-x64:
    name: Ubuntu 20.04 x64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.3

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          key: ubuntu-cache-${{ hashFiles('yarn.lock', 'packages/build-tools/DEPS.yml', 'packages/*/go.mod') }}
          restore-keys: ubuntu-cache-
          path: |
            ~/go/pkg/mod
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
            .yarn/install-state.gz
            third_party
            packages/build-tools/DEPS.stamps
            .tools
            !.tools/tool

      - name: Configure build
        run: ./task.sh configure build=Release

      - name: Fetch dependencies
        run: |
          sudo apt install -y libgtk-3-dev liblzma-dev libzstd-dev zlib1g-dev
          ./task.sh install-tools fetch-deps

      - name: Compile API definitions
        run: ./task.sh proto-build

      - name: Build libarchive
        run: ./task.sh libarchive-build

      - name: Build libknossos
        run: ./task.sh libknossos-build

      - name: Build Knossos wrapper
        run: ./task.sh client-build

      - name: Build Knossos UI
        run: ./task.sh client-ui-build

      - name: Archive build
        run: |
          cd build/client/launcher/Release
          tar -cf - . | zstd > ../Knossos.tar.zstd

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-x64
          path: build/client/launcher/Knossos.tar.zstd

  darwin-x64:
    name: macOS 10.15 x64
    runs-on: macos-10.15
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.3

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          key: darwin-cache-${{ hashFiles('yarn.lock', 'packages/build-tools/DEPS.yml', 'packages/*/go.mod') }}
          restore-keys: darwin-cache-
          path: |
            ~/go/pkg/mod
            .yarn/cache
            .yarn/unplugged
            .yarn/build-state.yml
            .yarn/install-state.gz
            third_party
            packages/build-tools/DEPS.stamps
            .tools
            !.tools/tool

      - name: Configure build
        run: ./task.sh configure build=Release

      - name: Fetch dependencies
        run: |
          brew install xz
          ./task.sh install-tools fetch-deps

      - name: Compile API definitions
        run: ./task.sh proto-build

      - name: Build libarchive
        run: ./task.sh libarchive-build

      - name: Build libknossos
        run: ./task.sh libknossos-build

      - name: Build Knossos wrapper
        run: ./task.sh client-build

      - name: Build Knossos UI
        run: ./task.sh client-ui-build

      - name: Archive build
        run: |
          cd build/client/launcher/Release
          tar -cJf Knossos.tar.xz Knossos.app

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: darwin-x64
          path: build/client/launcher/Release/Knossos.tar.xz
