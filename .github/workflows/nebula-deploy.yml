name: Deploy Nebula

on:
  push:
    branches:
      - deploy/nebula
      - feat/nebula-container

jobs:
  nebula-container:
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      contents: read
    environment: nu.fsnebula.org
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read build settings from repository
        id: setup
        run: |
          go_version=$(< .go-version)
          echo "Go version: ${go_version}"
          echo "::set-output name=go_version::${go_version}"

      - name: Setup Go toolchain
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.setup.outputs.go_version }}

      - name: Cache Go dependencies
        uses: actions/cache@v2
        with:
          key: golang-jslint-Linux-${{ hashFiles('**/go.sum') }}
          restore-keys: golang-jslint-Linux-
          path: |
            ~/go/pkg
            ~/.cache/go-build

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        with:
          key: yarn-Linux-${{ hashFiles('yarn.lock') }}
          restore-keys: yarn-Linux-
          path: |
            .pnp.*
            .yarn/
            !.yarn/releases
            !.yarn/plugins

      - name: Cache managed dependencies
        uses: actions/cache@v2
        with:
          key: third_party-${{ runner.os }}-${{ hashFiles('packages/build-tools/DEPS.yml') }}
          restore-keys: third_party-${{ runner.os }}-
          path: |
            packages/build-tools/DEPS.stamps
            third_party

      - name: Configure tasks
        run: ./task.sh configure static_deps=false

      - name: Fetch managed dependencies
        run: ./task.sh fetch-deps

      - name: Migrate database
        run: ./task.sh database-migrate

      - name: Build Nebula server
        run: ./task.sh server-build

      - name: Build Nebula frontend
        run: ./task.sh front-build

      - name: Build Nebula container
        run: ./task.sh server-container

      - name: Login to GitHub's Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker container
        run: docker push ghcr.io/ngld/knossos/nebula:latest

      - name: Restart container
        run: 'curl -H "Authorization: Bearer ${{ secrets.NEBULA_WATCH_TOKEN }}" https://infra.fsnebula.org/nebula-watch/v1/update'
