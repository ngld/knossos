syntax = "proto3";
option go_package = "github.com/ngld/knossos/packages/api/client";
package ngld.knossos;

// List of builtin types: https://developers.google.com/protocol-buffers/docs/proto3#scalar

import "google/protobuf/timestamp.proto";
import "mod.proto";

// Common types

message NullMessage {}
message NullResponse {
  bool dummy = 1;
}

message SuccessResponse {
  bool success = 1;
}

// RPC types

message LaunchModRequest {
  string modid = 1;
  string version = 2;
}

message TaskRequest {
  uint32 ref = 1;
}

message WakeupResponse {
  bool success = 1;
  string version = 2;
  string os = 3;
}

message Settings {
  bool first_run_done = 6;
	string library_path = 1;
	bool update_check = 2;
	bool error_reports = 3;
	int32 max_downloads = 4;
	int32 bandwidth_limit = 5;
}

message SimpleModList {
  message Item {
    string modid = 1;
    ModType type = 5;
    FileRef teaser = 2;
    string title = 3;
    string version = 4;
  }
  repeated Item mods = 2;
}

message ModInfoRequest {
  string id = 1;
  string version = 2;
}

message ToolInfo {
  string label = 1;
  string id = 2;
  bool debug = 3;
  bool fred = 4;
}

message ModInfoResponse {
  Release release = 1;
  ModMeta mod = 4;

  repeated string versions = 3;
  repeated ToolInfo tools = 2;
}

message ModDependencySnapshot {
  message ModInfo {
    repeated string versions = 1;
  }

  map<string, string> dependencies = 1;
  map<string, ModInfo> available = 2;
}

message FlagInfo {
  message Flag {
    string label = 1;
    string flag = 5;
    string category = 2;
    bool enabled = 3;
    string help = 4;
  }

  map<string, Flag> flags = 1;
  string freeform = 2;
}

message SaveFlagsRequest {
  map<string, bool> flags = 1;
  string freeform = 2;
  string modid = 3;
  string version = 4;
}

message UserSettings {
  message EngineOptions {
    string modid = 1;
    string version = 2;
  }

  EngineOptions engine_options = 1;
  string cmdline = 2;
  string custom_build = 3;
  google.protobuf.Timestamp last_played = 4;
}

message InstallInfoResponse {
  message Dependency {
    string id = 1;
    string package = 2;
  }

  message Package {
    string name = 1;
    PackageType type = 2;
    string notes = 3;
    repeated Dependency dependencies = 4;
  }

  message ModInfo {
    string id = 5;
    string title = 1;
    string version = 2;
    string notes = 3;

    repeated Package packages = 4;
  }

  string title = 1;
  repeated ModInfo mods = 2;
}

message InstallModRequest {
  message Mod {
    string modid = 1;
    string version = 2;
    repeated string packages = 3;
  }

  uint32 ref = 1;
  string modid = 2;
  string version = 3;

  repeated Mod mods = 4;
}

message UpdaterInfoResult {
  string updater = 1;
  string knossos = 2;
}

message VersionResult {
  string version = 1;
  string commit = 2;
}

message OpenLinkRequest {
  string link = 1;
}

message FixLibraryFolderPathPayload {
  string path = 1;
}

message HandleRetailFilesRequest {
  enum Operation {
    UNKNOWN = 0;
    AUTO_STEAM = 1;
    AUTO_GOG = 2;
    MANUAL_GOG = 3;
    MANUAL_FOLDER = 4;
  }

  Operation op = 1;
  string installer_path = 2;
  string library_path = 4;
  uint32 ref = 3;
}

// event messages

message ClientSentEvent {
  uint32 ref = 1;
  oneof payload {
    LogMessage message = 2;
    ProgressMessage progress = 3;
    TaskResult result = 4;
  }
}

message LogMessage {
  enum LogLevel {
    UNKNOWN = 0;
    TRACE = 1;
    DEBUG = 2;
    INFO = 3;
    WARNING = 4;
    ERROR = 5;
    FATAL = 6;
  }
  LogLevel level = 1;
  string message = 2;
  string sender = 3;
  google.protobuf.Timestamp time = 4;
}

message ProgressMessage {
  float progress = 1;
  string description = 2;
  bool error = 3;
  bool indeterminate = 4;
}

message TaskResult {
  bool success = 1;
  string error = 2;
}

// RPC methods

service Knossos {
  rpc Wakeup (NullMessage) returns (WakeupResponse) {};
  rpc GetSettings (NullMessage) returns (Settings) {};
  rpc SaveSettings (Settings) returns (SuccessResponse) {};
  rpc ScanLocalMods (TaskRequest) returns (SuccessResponse) {};
  rpc GetLocalMods (NullMessage) returns (SimpleModList) {};
  rpc GetModInfo (ModInfoRequest) returns (ModInfoResponse) {};
  rpc GetModDependencies (ModInfoRequest) returns (ModDependencySnapshot) {};
  rpc GetModFlags (ModInfoRequest) returns (FlagInfo) {};
  rpc SaveModFlags (SaveFlagsRequest) returns (SuccessResponse) {};
  rpc LaunchMod (LaunchModRequest) returns (SuccessResponse) {};
  rpc SyncRemoteMods (TaskRequest) returns (SuccessResponse) {};
  rpc GetRemoteMods (NullMessage) returns (SimpleModList) {};
  rpc GetRemoteModInfo (ModInfoRequest) returns (ModInfoResponse) {};
  rpc GetModInstallInfo (ModInfoRequest) returns (InstallInfoResponse) {};
  rpc InstallMod (InstallModRequest) returns (SuccessResponse) {};
  rpc CheckForProgramUpdates (NullMessage) returns (UpdaterInfoResult) {};
  rpc UpdateUpdater (TaskRequest) returns (SuccessResponse) {};
  rpc UpdateKnossos (TaskRequest) returns (SuccessResponse) {};
  rpc GetVersion (NullMessage) returns (VersionResult) {};
  rpc OpenLink (OpenLinkRequest) returns (SuccessResponse) {};
  rpc FixLibraryFolderPath (FixLibraryFolderPathPayload) returns (FixLibraryFolderPathPayload) {};
  rpc HandleRetailFiles (HandleRetailFilesRequest) returns (SuccessResponse) {};
}
