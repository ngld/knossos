syntax = "proto3";
option go_package = "github.com/ngld/knossos/packages/api/api";
package ngld.knossos;

import "google/protobuf/timestamp.proto";
import "mod.proto";

// General types

message BoolResponse {
  bool success = 1;
}

message TokenRequest {
  // required
  string token = 1;
}

message TokenResponse {
  bool success = 1;
  string token = 2;
}

message NullRequest {}

// Specific messages

message LoginRequest {
  // required
  string username = 1;
  // required
  string password = 2;
}

message LoginResponse {
  string token = 1;
  bool success = 2;
}

message SessionResponse {
  bool valid = 1;
  string username = 2;
}

message RegisterRequest {
  // required
  string username = 1;
  // required
  string email = 2;
  // required
  string password = 3;
}

message StartPasswordResetRequest {
  // required
  string email = 1;
}

message ResetPasswordRequest {
  // required
  string token = 1;
  // required
  string password = 2;
}

message ModListRequest {
  enum SortType {
    NAME = 0;
  }

  // required
  int32 offset = 1;
  int32 limit = 2;
  string query = 3;
  SortType sort = 4;
}

message ModListItem {
  string modid = 1;
  string teaser = 2;
  string title = 3;
  string version = 5;
  uint32 release_count = 4;
}

message ModListResponse {
  int32 count = 1;
  repeated ModListItem mods = 2;
}

message ModDetailsRequest {
  // required
  string modid = 1;
  bool latest = 2;
  string version = 3;
  bool request_downloads = 4;
}

message ModDownloadArchive {
  string label = 1;
  string checksum = 2;
  uint32 size = 3;
  repeated string links = 4;
}

message ModDownloadPackage {
  string name = 1;
  string notes = 2;
  repeated ModDownloadArchive archives = 3;
}

message ModDetailsResponse {
  string title = 1;
  string version = 2;
  uint32 type = 3;
  uint32 stability = 4;
  string description = 5;
  string banner = 6;
  string release_thread = 7;
  repeated string screenshots = 8;
  repeated string videos = 9;
  google.protobuf.Timestamp released = 10;
  google.protobuf.Timestamp updated = 11;

  repeated string versions = 12;
  repeated ModDownloadPackage downloads = 13;
}

message ModInstallRequest {
  string modid = 1;
  string version = 2;
}

message ModInstallResponse {
  string error = 1;
  // a list containing the requested mod and all dependencies
  repeated Release releases = 2;
}

message VersionsResponse {
  map<string, string> versions = 1;
}

service Nebula {
  rpc Login (LoginRequest) returns (LoginResponse) {};
  rpc CheckToken (NullRequest) returns (SessionResponse) {};
  rpc Register (RegisterRequest) returns (BoolResponse) {};
  rpc VerifyAccount (TokenRequest) returns (BoolResponse) {};
  rpc StartPasswordReset (StartPasswordResetRequest) returns (BoolResponse) {};
  rpc PreparePasswordReset (TokenRequest) returns (TokenResponse) {};
  rpc ResetPassword (ResetPasswordRequest) returns (BoolResponse) {};

  rpc GetModList (ModListRequest) returns (ModListResponse) {};
  rpc GetModDetails (ModDetailsRequest) returns (ModDetailsResponse) {};

  rpc RequestModInstall (ModInstallRequest) returns (ModInstallResponse) {};

  rpc GetVersions (NullRequest) returns (VersionsResponse) {};
}
